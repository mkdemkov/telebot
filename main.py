import time

import telebot
from telebot import types
import math

global count_yes, count_no, count_yes_no
global chat_id
global ind
global ind_girl

bot = telebot.TeleBot('5501458544:AAFN8ZZP5xIACExlA4wyreHD7recnuI1STE')

quest = ["–ï—Å—Ç—å –ª–∏ —É —Ç–µ–±—è –¥—Ä—É–∑—å—è?", "–ü–æ—è–≤–ª—è–µ—Ç—Å—è –ª–∏ –Ω–∞ —Ç–≤–æ—ë–º –ª–∏—Ü–µ —É–ª—ã–±–∫–∞, –∫–æ–≥–¥–∞ —Ç—ã —Å–º–æ—Ç—Ä–∏—à—å –Ω–∞ –º—É–∂—á–∏–Ω?",
         "–ß–∞—Å—Ç–æ –ª–∏ —Ç—ã –∑–∞—Å–º–∞—Ç—Ä–∏–≤–∞–µ—à—å—Å—è –Ω–∞ –º—É–∂—á–∏–Ω, –∫–æ–≥–¥–∞ –µ–¥–µ—à—å –Ω–∞ —Ä–∞–±–æ—Ç—É/—É—á—ë–±—É?",
         "–•–æ—Ç–µ–ª –ª–∏ –±—ã —Ç—ã —Ç—Ä–æ–π–Ω–∏—á—ë–∫ —Å –º—É–∂—á–∏–Ω–æ–π –∏ –∫—Ä–∞—Å–∏–≤–æ–π –¥–µ–≤—É—à–∫–æ–π?", "–ß–∞—Å—Ç–æ –ª–∏ —Ç—ã –≥–æ–≤–æ—Ä–∏—à—å –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç—ã –º—É–∂—á–∏–Ω–∞–º?",
         "–ü—Ä–µ–¥—Å—Ç–∞–≤–ª—è–ª –ª–∏ —Ç—ã –º—É–∂—á–∏–Ω—É –≤ —Å–≤–æ–µ–π —Å–µ–∫—Å—É–∞–ª—å–Ω–æ–π —Ñ–∞–Ω—Ç–∞–∑–∏–∏?",
         "–î—É–º–∞–ª –ª–∏ —Ç—ã, —á—Ç–æ –º–æ–∂–µ—à—å –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç –æ–±—â–µ–Ω–∏—è —Å –º—É–∂—á–∏–Ω–∞–º–∏?",
         "–°—á–∏—Ç–∞–µ—à—å –ª–∏ —Ç—ã —Å—É–º–∞—Å—à–µ–¥—à–∏–º–∏ –ª—é–¥–µ–π, –∫–æ—Ç–æ—Ä—ã–µ —É—â–µ–º–ª—è—é—Ç –ø—Ä–∞–≤–∞ –º—É–∂—á–∏–Ω?"]

quest_girl = ["–ï—Å—Ç—å –ª–∏ —É —Ç–µ–±—è –ø–æ–¥—Ä—É–≥–∏?", "–ü–æ—è–≤–ª—è–µ—Ç—Å—è –ª–∏ —É —Ç–µ–±—è —É–ª—ã–±–∫–∞ –Ω–∞ –ª–∏—Ü–µ, –∫–æ–≥–¥–∞ —Ç—ã —Å–º–æ—Ç—Ä–∏—à—å –Ω–∞ –¥–µ–≤—É—à–∫—É?",
              "–ß–∞—Å—Ç–æ –ª–∏ —Ç—ã –∑–∞—Å–º–∞—Ç—Ä–∏–≤–∞–µ—à—å—Å—è –Ω–∞ –¥–µ–≤—É—à–µ–∫, –∫–æ–≥–¥–∞ –µ–¥–µ—à—å –Ω–∞ —Ä–∞–±–æ—Ç—É/—É—á—ë–±—É?",
              "–•–æ—Ç–µ–ª–∞ –±—ã —Ç—ã —Ç—Ä–æ–π–Ω–∏—á—ë–∫ —Å –∫—Ä–∞—Å–∏–≤–æ–π –¥–µ–≤—É—à–∫–æ–π –∏ –º—É–∂—á–∏–Ω–æ–π?", "–ß–∞—Å—Ç–æ –ª–∏ —Ç—ã –≥–æ–≤–æ—Ä–∏—à—å –¥–µ–≤—É—à–∫–∞–º –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç—ã?",
              "–ü—Ä–µ–¥—Å—Ç–∞–≤–ª—è–ª–∞ –ª–∏ —Ç—ã –¥–µ–≤—É—à–∫—É –≤ —Å–≤–æ–µ–π —Å–µ–∫—Å—É–∞–ª—å–Ω–æ–π —Ñ–∞–Ω—Ç–∞–∑–∏–∏?",
              "–î—É–º–∞–ª–∞ –ª–∏ —Ç—ã, —á—Ç–æ –º–æ–∂–µ—à—å –ø—Ä–µ–∫—Ä–∞—Ç–∏—Ç—å –æ–±—â–µ–Ω–∏–µ —Å –¥–µ–≤—É—à–∫–∞–º–∏?",
              "–°—á–∏—Ç–∞–µ—à—å –ª–∏ —Ç—ã —Å—É–º–∞—Å—à–µ–¥—à–∏–º–∏ –ª—é–¥–µ–π, –∫–æ—Ç–æ—Ä—ã–µ —É—â–µ–º–ª—è—é—Ç –ø—Ä–∞–≤–∞ –∂–µ–Ω—â–∏–Ω?"]


@bot.message_handler(commands=['about'])
def about(message):
    global chat_id
    chat_id = message.chat.id
    bot.send_message(chat_id,
                     "–Ø - –±–æ—Çü§ñ, –ø–æ–∑–≤–æ–ª—è—é—â–∏–π –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞—Å–∫–æ–ª—å–∫–æ —Ç—ã –≥–æ–º–æ—Å–µ–∫—Å—É–∞–ª–µ–Ω(–∏–ª–∏ —Å–∫–ª–æ–Ω–Ω–∞ –∫ –ª–µ—Å–±–∏—è–Ω—Å—Ç–≤—É)\n\n"
                     "–ú–æ–µ–≥–æ —Å–æ–∑–¥–∞—Ç–µ–ª—è –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏, –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–≤ —Å–ª–µ–¥—É—é—â–∏–π QR-–∫–æ–¥:")
    qr_code = open('data/t_me-filledevoler.jpg', 'rb')
    bot.send_photo(chat_id, qr_code)


@bot.message_handler(commands=['start'])
def start(message):
    global chat_id
    chat_id = message.chat.id
    global count_yes, count_no
    global ind
    global ind_girl
    count_yes = count_no = 0
    ind = 0
    ind_girl = 0

    bot.send_message(chat_id,
                     f'<b>–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, ‚ù§Ô∏è{message.from_user.first_name}‚ù§Ô∏è!</b>\n' + '–ï—Å–ª–∏ —Ç—ã —Ä–µ—à–∏–ª(–∞) –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è '
                                                                                    '—ç—Ç–∏–º –±–æ—Ç–æ–º, '
                                                                                    '–∑–Ω–∞—á–∏—Ç —Ç–µ–±–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–∞ —Ç–≤–æ—è '
                                                                                    '–æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—è üëª\n',
                     parse_mode='HTML')
    show_button(message)


def show_button(message):
    global chat_id
    chat_id = message.chat.id
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("–Ø –ø–∞—Ä–µ–Ω—åüë¶üèª")
    btn2 = types.KeyboardButton("–Ø –¥–µ–≤—É—à–∫–∞üë©üèº")
    markup.add(btn1, btn2)
    bot.send_message(chat_id, "–î–ª—è –Ω–∞—á–∞–ª–∞ –¥–∞–≤–∞–π –æ–ø—Ä–µ–¥–µ–ª–∏–º—Å—è —Å –ø–æ–ª–æ–º:", reply_markup=markup)


@bot.message_handler(content_types=['text'])
def parse_user_text(message):
    global count_yes, count_no, count_yes_no
    global chat_id
    chat_id = message.chat.id
    if message.text == "–Ø –ø–∞—Ä–µ–Ω—åüë¶üèª":
        bot.send_message(chat_id, "<b>–ù—É —á—Ç–æ, —Å–ª–∞–¥–∫–∏–π, –ø–æ–µ—Ö–∞–ª–∏!</b>", parse_mode="HTML")
        first_quest(message)
    elif message.text == "–Ø –¥–µ–≤—É—à–∫–∞üë©üèº":
        bot.send_message(chat_id, "<b>–ù—É —á—Ç–æ, —Å–ª–∞–¥–∫–∞—è, –ø–æ–µ—Ö–∞–ª–∏!</b>", parse_mode="HTML")
        first_quest_girl(message)
    elif message.text == "–ê":
        bot.send_message(chat_id, f"{count_yes} {count_no}")
    elif message.text == "Big Fat Cock":
        bot.send_message(chat_id, "<b>–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –£ –≤–∞—Å —Ä–µ–∞–ª—å–Ω–æ big fat cock!</b>", parse_mode="HTML")
    else:
        bot.send_message(chat_id, "–Ø –Ω–µ –º–æ–≥—É –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ç–∞–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ üò¢")


def first_quest(message):
    global ind
    global chat_id
    chat_id = message.chat.id
    markup = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton("–î–∞üëçüèª", callback_data="yes")
    btn2 = types.InlineKeyboardButton("–ù–µ—Çüëéüèª", callback_data="no")
    markup.add(btn1, btn2)
    bot.send_message(chat_id, quest[ind], reply_markup=markup)


def first_quest_girl(message):
    global chat_id
    global ind
    chat_id = message.chat.id
    markup = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton("Yesüëçüèª", callback_data="da")
    btn2 = types.InlineKeyboardButton("Noüëéüèª", callback_data="net")
    markup.add(btn1, btn2)
    bot.send_message(chat_id, quest_girl[ind], reply_markup=markup)


@bot.callback_query_handler(func=lambda call: True)
def callback_da(call):
    global chat_id
    global count_yes
    global count_no
    global ind
    if call.message:
        if call.data == "da":
            show_answer_res("")
            count_yes += 1
            ind += 1
            if ind >= len(quest_girl):
                final_quest_girl()
            else:
                send_girl(quest_girl[ind])
        elif call.data == "net":
            show_answer_res("")
            count_no += 1
            ind += 1
            if ind >= len(quest_girl):
                final_quest_girl()
            else:
                send_girl(quest_girl[ind])


        elif call.data == "first":
            bot.send_message(chat_id, "–ö–∞–∫–∞—è —Ç—ã —É–º–Ω–∏—á–∫–∞! –ù–µ –ø—Ä–µ–¥–∞–ª–∞ —Å–≤–æ—é –ø–æ–¥—Ä—É–∂–∫—É, –≥–æ—Ä–∂—É—Å—å —Ç–æ–±–æ–π‚ù§Ô∏è")
            sticker = open('data/momhave.webp', 'rb')
            bot.send_sticker(chat_id, sticker)
            beatiful_download()
            func_end_girl()

        elif call.data == "second":
            bot.send_message(chat_id, "–í–æ—Ç —Ç—ã —Å—É–∫–∞! –ü—Ä–æ–º–µ–Ω—è–ª–∞ –ø–æ–¥—Ä—É–≥—É –Ω–∞ –º—É–∂—á–∏–Ω—É...–≥–∞–¥–æ—Å—Ç—åü§¢")
            sticker = open('data/momless.webp', 'rb')
            bot.send_sticker(chat_id, sticker)
            beatiful_download()
            func_end_girl()

        else:
            if call.data == "yes":
                show_answer_res("–î–∞")
                count_yes += 1
                # global ind
                ind += 1
                if ind >= len(quest):
                    final_quest()
                else:
                    send(quest[ind])
            elif call.data == "no":
                # elif call.data == "no":
                show_answer_res("–ù–µ—Ç")
                count_no += 1
                ind += 1
                if ind >= len(quest):
                    final_quest()
                else:
                    send(quest[ind])
            else:
                if call.data == "girl":
                    bot.send_message(chat_id, "–ê—Ö —Ç—ã —Å—É–∫–∞-—Ç–æ —Ç–∞–∫–∞—è! –ö–µ–Ω—Ç–∞ –Ω–∞ –∂–µ–Ω—â–∏–Ω—É –ø—Ä–æ–º–µ–Ω—è–ª! –§—É!")
                    stick = open('data/sticker.webp', 'rb')
                    bot.send_sticker(chat_id, stick)
                    bot.send_message(chat_id, "–ù–µ –æ—á–µ–Ω—å —Ö–æ—á–µ—Ç—Å—è –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å —Å —Ç–æ–±–æ–π –¥–∏—Å–∫—É—Å—Å–∏—é, –Ω–æ –≤–æ—Ç —Ç–≤–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç‚ö°Ô∏è")
                    beatiful_download()
                    func_end()
                    # –ú–ë –ù–ò–ñ–ï –ö–†–ê–®
                elif call.data == "boy":
                    bot.send_message(chat_id, "–•–æ—Ä–æ—à! –¢–µ—Å—Ç –Ω–∞ –ø#–¥–æ—Ä–∞ –ø—Ä–æ—à—ë–ª! –ö–µ–Ω—Ç—ã –º–æ–≥—É—Ç —Ç–æ–±–æ–π –≥–æ—Ä–¥–∏—Ç—å—Å—è")
                    stick = open('data/sticker_good.webp', 'rb')
                    bot.send_sticker(chat_id, stick)
                    beatiful_download()
                    func_end()


def send_girl(message):
    global chat_id
    markup = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton("Yesüëçüèª", callback_data="da")
    btn2 = types.InlineKeyboardButton("Noüëéüèª", callback_data="net")
    markup.add(btn1, btn2)
    bot.send_message(chat_id, message, reply_markup=markup)


@bot.callback_query_handler(func=lambda call: True)
def callback_yes(call):
    global chat_id
    global count_yes
    global count_no
    global ind
    if call.message:
        if call.data == "yes":
            show_answer_res("–î–∞")
            count_yes += 1
            # global ind
            ind += 1
            if ind >= len(quest):
                final_quest()
            else:
                send(quest[ind])
        elif call.data == "no":
            # elif call.data == "no":
            show_answer_res("–ù–µ—Ç")
            count_no += 1
            ind += 1
            if ind >= len(quest):
                final_quest()
            else:
                send(quest[ind])
        else:
            if call.data == "girl":
                bot.send_message(chat_id, "–ê—Ö —Ç—ã —Å—É–∫–∞-—Ç–æ —Ç–∞–∫–∞—è! –ö–µ–Ω—Ç–∞ –Ω–∞ –∂–µ–Ω—â–∏–Ω—É –ø—Ä–æ–º–µ–Ω—è–ª! –§—É!")
                stick = open('data/sticker.webp', 'rb')
                bot.send_sticker(chat_id, stick)
                bot.send_message(chat_id, "–ù–µ –æ—á–µ–Ω—å —Ö–æ—á–µ—Ç—Å—è –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å —Å —Ç–æ–±–æ–π –¥–∏—Å–∫—É—Å—Å–∏—é, –Ω–æ –≤–æ—Ç —Ç–≤–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç‚ö°Ô∏è")
                beatiful_download()
                func_end()
                # –ú–ë –ù–ò–ñ–ï –ö–†–ê–®
            elif call.data == "boy":
                bot.send_message(chat_id, "–•–æ—Ä–æ—à! –¢–µ—Å—Ç –Ω–∞ –ø#–¥–æ—Ä–∞ –ø—Ä–æ—à—ë–ª! –ö–µ–Ω—Ç—ã –º–æ–≥—É—Ç —Ç–æ–±–æ–π –≥–æ—Ä–¥–∏—Ç—å—Å—è")
                stick = open('data/sticker_good.webp', 'rb')
                bot.send_sticker(chat_id, stick)
                beatiful_download()
                func_end()


def send(message):
    # bot.send_message(chat_id, message)
    global chat_id
    markup = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton("–î–∞üëçüèª", callback_data="yes")
    btn2 = types.InlineKeyboardButton("–ù–µ—Çüëéüèª", callback_data="no")
    markup.add(btn1, btn2)
    bot.send_message(chat_id, message, reply_markup=markup)


def show_answer_res(answer):
    global chat_id
    bot.send_message(chat_id, "-----------------------------------------")


def final_quest():
    global chat_id
    bot.send_message(chat_id, "<b>–ò—Ç–∞–∫, —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –≤–æ–ø—Ä–æ—Å‚ùó</b>Ô∏è", parse_mode="HTML")
    markup = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton("–ü–æ–¥—Ä—É–≥—Éüßçüèº‚Äç‚ôÄÔ∏è", callback_data="girl")
    btn2 = types.InlineKeyboardButton("–î—Ä—É–≥–∞üßçüèª", callback_data="boy")
    markup.add(btn1, btn2)
    bot.send_message(chat_id, "–¢–µ–±—è –∑–æ–≤—É—Ç –≥—É–ª—è—Ç—å –¥—Ä—É–≥ –∏ –ø–æ–¥—Ä—É–≥–∞. –ö–æ–≥–æ —Ç—ã –≤—ã–±–µ—Ä–µ—à—å?", reply_markup=markup)


def final_quest_girl():
    global chat_id
    bot.send_message(chat_id, "–í–Ω–∏–º–∞–Ω–∏–µ! –ø–æ—Å–ª–æ–µ–¥–Ω–∏–π –≤–æ–ø—Ä–æ—Å")
    markup = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton("–ü–æ–¥—Ä—É–≥—ÉüíÉüèªÔ∏è", callback_data="first")
    btn2 = types.InlineKeyboardButton("–î—Ä—É–≥–∞üï∫üèª", callback_data="second")
    markup.add(btn1, btn2)
    bot.send_message(chat_id, "–¢–µ–±—è –∑–æ–≤—ë—Ç –≥—É–ª—è—Ç—å –ø–æ–¥—Ä—É–≥–∞ –∏ –¥—Ä—É–≥. –ö–æ–≥–æ —Ç—ã –≤—ã–±–µ—Ä–µ—à—å?", reply_markup=markup)


def func_end():
    global count_yes, count_no
    global chat_id
    final_res = round(count_yes / 8 * 100)
    bot.send_message(chat_id, f"–í—ã –≥–æ–º–æ—Å–µ–∫—Å—É–∞–ª—å–Ω—ã –Ω–∞ <b>{final_res}%</b>", parse_mode="HTML")
    if final_res > 80:
        bot.send_message(chat_id, "–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –í —ç—Ç–æ–π –∂–∏–∑–Ω–∏ –Ω–µ—Ç –Ω–∏—á–µ–≥–æ –ª—É—á—à–µ, —á–µ–º –º—É–∂—á–∏–Ω–∞ –Ω–µ—Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã—Ö –≤–∑–≥–ª—è–¥–æ–≤üòò")
        audio = open('data/Oleg_Gazmanov_-_Moi_yasnye_dni_right_version_Gachi_Remix_69147154.mp3', 'rb')
        bot.send_audio(chat_id, audio)
    elif final_res > 50:
        bot.send_message(chat_id,
                         "–í–∏–∂—É, —á—Ç–æ —Ç—ã –Ω–∞—Ö–æ–¥–∏—à—å—Å—è –Ω–∞ –ø–µ—Ä–µ–ø–ª–µ—Ç–µ–Ω–∏–∏ —Å—É–¥—å–±—ã. –ù–∞–¥–µ—é—Å—å, –¥–∞–ª—å—à–µ —Ç—ã –±—É–¥–µ—à—å –¥–≤–∏–≥–∞—Ç—å—Å—è –≤ "
                         "–ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–∏, if you know what I meanüè≥Ô∏è‚Äçüåàüòâ")
    else:
        bot.send_message(chat_id,
                         "–ß—Ç–æ –∂, –≤–∏–∂—É —Ç—ã —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã—Ö –≤–∑–≥–ª—è–¥–æ–≤. –ù–∏—á–µ–≥–æ –Ω–µ —Å–∫–∞–∑–∞—Ç—å, —Ç–≤–æ–π –≤—ã–±–æ—Ä. –°–ø–∞—Å–∏–±–æ,"
                         " —á—Ç–æ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞–ª—Å—è –±–æ—Ç–æ–ºüíÄ")


def func_end_girl():
    global count_yes, count_no
    global chat_id
    final_res = round(count_yes / 8 * 100)
    bot.send_message(chat_id, f"–í—ã –ª–µ—Å–±–∏—è–Ω–∫–∞ –Ω–∞ <b>{final_res}%</b>", parse_mode="HTML")
    if final_res > 80:
        bot.send_message(chat_id, "–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –í —ç—Ç–æ–π –∂–∏–∑–Ω–∏ –Ω–µ—Ç –Ω–∏—á–µ–≥–æ –ª—É—á—à–µ, —á–µ–º –¥–µ–≤—É—à–∫–∏, –ª—é–±—è—â–∏–µ –¥—Ä—É–≥–∏—Ö –¥–µ–≤—É—à–µ–∫üòò")
    elif final_res > 50:
        bot.send_message(chat_id,
                         "–í–∏–∂—É, —á—Ç–æ —Ç—ã –Ω–∞—Ö–æ–¥–∏—à—å—Å—è –Ω–∞ –ø–µ—Ä–µ–ø–ª–µ—Ç–µ–Ω–∏–∏ —Å—É–¥—å–±—ã. –ù–∞–¥–µ—é—Å—å, –¥–∞–ª—å—à–µ —Ç—ã –±—É–¥–µ—à—å –¥–≤–∏–≥–∞—Ç—å—Å—è –≤ "
                         "–ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–∏, if you know what I meanüè≥Ô∏è‚Äçüåàüòâ")
    else:
        bot.send_message(chat_id,
                         "–ß—Ç–æ –∂, –≤–∏–∂—É —Ç—ã —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã—Ö –≤–∑–≥–ª—è–¥–æ–≤. –ù–∏—á–µ–≥–æ –Ω–µ —Å–∫–∞–∑–∞—Ç—å, —Ç–≤–æ–π –≤—ã–±–æ—Ä. –°–ø–∞—Å–∏–±–æ,"
                         " —á—Ç–æ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∞—Å—å –±–æ—Ç–æ–ºüíÄ")


def beatiful_download():
    global chat_id
    down = bot.send_message(chat_id, "<b>–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ—è–≤—è—Ç—Å—è —á–µ—Ä–µ–∑ 3</b>", parse_mode="HTML")
    time.sleep(2)
    bot.edit_message_text(chat_id=chat_id, message_id=down.id, text="<b>–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ—è–≤—è—Ç—Å—è —á–µ—Ä–µ–∑ 2</b>",
                          parse_mode="HTML")
    time.sleep(2)
    bot.edit_message_text(chat_id=chat_id, message_id=down.id, text="<b>–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ—è–≤—è—Ç—Å—è —á–µ—Ä–µ–∑ 1</b>",
                          parse_mode="HTML")
    time.sleep(2)
    bot.edit_message_text(chat_id=chat_id, message_id=down.id, text="<b>–ê –≤–æ—Ç –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Çüéâ</b>",
                          parse_mode="HTML")


bot.polling(none_stop=True)
